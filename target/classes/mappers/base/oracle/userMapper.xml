<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
	<!--사용자 목록 -->
	<select id="list" parameterType="hashMap" resultType="userDTO">
		<![CDATA[
		select * from  (select
  rownum rn,
		t1.user_id,
		t1.user_name,
		t1.user_phone,
		t1.user_email,
		t1.user_type_code,
		t1.use_yn,
		t1.create_date,
		t1.create_user_id,
		t1.user_status_code,
		t1.user_key,
		t1.user_adm_code,
		t1.user_dept,
		t1.user_phone_office,
		t1.user_position,
		t1.user_work_cont,
		t1.user_addr,
		t2.sys_title user_type_title,
		t3.sys_title user_status_title
		from
		tb_user t1
		,tc_code_sys t2
		,tc_code_sys t3
		where
		t1.use_yn='Y'
		and
		t1.user_type_code=t2.sys_code
		and
		t1.user_status_code=t3.sys_code
		order by t1.user_id
		]]>
			<if test="user_type_code!=null"> and t1.user_type_code=#{user_type_code}</if>
			<if test="user_name!=null"> and t1.user_name like concat(#{search_txt},'%')</if>
			<if test="user_email!=null"> and t1.user_name like concat(#{search_txt},'%')</if>
			<if test="st_date!=null"> and to_char(t1.create_date,'yyyymmdd') between #{st_date} and #{en_date}</if>
			<if test="user_adm_code!=null"> and t1.user_adm_code=#{user_adm_code}</if>
			
			) tbuser
      where  rn between #{FirstIndex}+1 and #{LastIndex}+1
	</select>
	
	<select id="totalCount" parameterType="hashMap" resultType="int">
		select count(*)
		from tb_user t1 ,
		  tc_code_sys t2 ,
		  tc_code_sys t3
		where t1.user_type_code=t2.sys_code
		and t1.user_status_code=t3.sys_code
		<if test="userId!=null">and t1.user_id = #{userId}</if>
		<if test="userName!=null">and t1.user_name = #{userName}</if>
		<if test="stDate!=null"> and to_char(t1.create_date,'yyyymmdd') between #{stDate} and #{enDate}</if>
		
	</select>
	
	<!--사용자 상세 -->
	<select id="detail" parameterType="hashMap" resultType="userDTO">
		
		with userRoles as(
			select user_id,LISTAGG(role_id, ',') WITHIN GROUP (ORDER BY role_id) roles from tb_user_role
			<if test="user_id!=null">
			where 
			user_id=#{user_id}
			</if>
			
			group by user_id
		)
		select
		t1.user_id,
		t1.user_name,
		t1.user_phone,
		t1.user_email,
		t1.user_type_code,
		t1.use_yn,
		t1.create_date,
		t1.create_user_id,
		t1.user_status_code,
		t1.user_key,
		t1.user_adm_code,
		t1.user_dept,
		t1.user_phone_office,
		t1.user_position,
		t1.user_work_cont,
		t1.user_addr,
		
		t2.sys_title user_type_title,
		t3.sys_title user_status_title
		,t4.roles user_roles
		from
		tb_user t1
		left join tc_code_sys t2 on t1.user_type_code=t2.sys_code
		left join tc_code_sys t3 on t1.user_status_code=t3.sys_code
		left join userRoles t4 on t1.user_id=t4.user_id
	
		<where>
		<if test="user_id!=null">
			and
			t1.user_id=#{user_id}
		</if>
		<if test="user_pwd!=null">
			and
			t1.user_pwd=#{user_pwd}
		</if>
		<if test="user_name!=null">
			and
			t1.user_name=#{user_name}
		</if>
		<if test="user_email!=null">
			and
			t1.user_email=#{user_email}
		</if>
		</where>
	</select>
	<!--사용자 갱신 -->
	<update id="update" parameterType="userDTO">
		update tb_user
		set
		 update_date=sysdate
		,user_email=#{user_email}
		<if test="user_name!=null">
		,user_name=#{user_name}
		</if>
		<if test="user_pwd!=null">
		,user_pwd=#{user_pwd}
		</if>
		<if test="user_adm_code!=null">
		,user_adm_code=#{user_adm_code}
		</if>
		<if test="user_dept!=null">
		,user_dept=#{user_dept}
		</if>
		<if test="user_phone_office!=null">
		,user_phone_office=#{user_phone_office}
		</if>
		<if test="user_position!=null">
		,user_position=#{user_position}
		</if>
		<if test="user_work_cont!=null">
		,user_work_cont=#{user_work_cont}
		</if>
		<if test="user_addr!=null">
		,user_addr=#{user_addr}
		</if>
		
		,user_phone=#{user_phone}
		<if test="user_status_code!=null">
		,user_status_code=#{user_status_code}
		</if>
		<if test="user_type_code!=null">
		,user_type_code=#{user_type_code}
		</if>
		<if test="user_major!=null">
		,user_major=#{user_major}
		</if>
		where user_id=#{user_id}
		
	</update>
	<update id="create" parameterType="userDTO">
		
		insert into tb_user
		(
		user_id
		,user_email
		,user_name
		,user_pwd
		,user_phone
		,user_status_code
		,user_type_code
		,create_date
		,create_user_id
		,update_date
		,update_user_id
		,user_key
		,use_yn
		<if test="user_adm_code!=null">
		,user_adm_code
		</if>
		<if test="user_dept!=null">
		,user_dept
		</if>
		<if test="user_phone_office!=null">
		,user_phone_office
		</if>
		<if test="user_position!=null">
		,user_position
		</if>
		<if test="user_work_cont!=null">
		,user_work_cont
		</if>
		<if test="user_addr!=null">
		,user_addr
		</if>
		
		<if test="user_major!=null">
		,user_major
		</if>		
		)
		values
		(
		 #{user_id}
		,#{user_email}
		,#{user_name}
		,#{user_pwd}
		,#{user_phone}
		,#{user_status_code}
		,#{user_type_code}
		,sysdate
		,#{create_user_id}
		,sysdate
		,#{update_user_id}
		,#{user_key}
		,#{use_yn}
		<if test="user_adm_code!=null">
		,#{user_adm_code}
		</if>
		<if test="user_dept!=null">
		,#{user_dept}
		</if>
		<if test="user_phone_office!=null">
		,#{user_phone_office}
		</if>
		<if test="user_position!=null">
		,#{user_position}
		</if>
		<if test="user_work_cont!=null">
		,#{user_work_cont}
		</if>
		<if test="user_addr!=null">
		,#{user_addr}
		</if>
		
		<if test="user_major!=null">
		,#{user_major}
		</if>
		)
	
	</update>

	<!-- 패스워드변경 -->
	<update id="changePassword" parameterType="hashMap">
		<![CDATA[
		update tb_user
		set user_pwd=#{user_pwd}
		where
		user_id=#{user_id}
		]]>
	</update>
	
	<update id="updateUserType" parameterType="hashMap">
		update tb_user
		set user_type_code=#{user_type_code},user_status_code=#{user_status_code}
		where
		user_id=#{user_id}
	</update>
	
	<!-- 사용자 타입 갱신 -->
	<update id="changeType" parameterType="hashMap">
		<![CDATA[
		update tb_user
		set user_type_code=#{user_type_code}
		where
		user_id=#{user_id}
		]]>
	</update>
	<!-- 사용자  삭제 갱신 -->
	<update id="delete" parameterType="hashMap">
		<![CDATA[
		update tb_user
		 set update_date=sysdate
		 ,update_user_id=#{update_user_id,jdbcType=VARCHAR}
		,use_yn='N'
		where
		user_id=#{user_id}
		]]>
	</update>
	
	<select id="countRole" parameterType="hashMap" resultType="int">
	<![CDATA[
	select count(*) from tb_user_role
	where role_id=#{role_id}
	]]>
	</select>
	
	<select id="countTotalUser" parameterType="hashMap" resultType="int">
		select count(*) from tb_user where use_yn='Y'		
	</select>
	
	<update id="updateFailCnt" parameterType="userDTO">		
		update tb_user set user_fail_count=user_fail_count+1 where user_id=#{user_id}
	</update>
	<update id="updateReFailCnt" parameterType="userDTO">		
		update tb_user set user_fail_count=0 where user_id=#{user_id}
	</update>
</mapper>